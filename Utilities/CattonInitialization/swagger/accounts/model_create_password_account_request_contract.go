/*
Accounts.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreatePasswordAccountRequestContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePasswordAccountRequestContract{}

// CreatePasswordAccountRequestContract struct for CreatePasswordAccountRequestContract
type CreatePasswordAccountRequestContract struct {
	Email NullableString `json:"email,omitempty"`
	Password NullableString `json:"password,omitempty"`
	Username NullableString `json:"username,omitempty"`
}

// NewCreatePasswordAccountRequestContract instantiates a new CreatePasswordAccountRequestContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePasswordAccountRequestContract() *CreatePasswordAccountRequestContract {
	this := CreatePasswordAccountRequestContract{}
	return &this
}

// NewCreatePasswordAccountRequestContractWithDefaults instantiates a new CreatePasswordAccountRequestContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePasswordAccountRequestContractWithDefaults() *CreatePasswordAccountRequestContract {
	this := CreatePasswordAccountRequestContract{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePasswordAccountRequestContract) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePasswordAccountRequestContract) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *CreatePasswordAccountRequestContract) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *CreatePasswordAccountRequestContract) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *CreatePasswordAccountRequestContract) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *CreatePasswordAccountRequestContract) UnsetEmail() {
	o.Email.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePasswordAccountRequestContract) GetPassword() string {
	if o == nil || IsNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePasswordAccountRequestContract) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *CreatePasswordAccountRequestContract) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *CreatePasswordAccountRequestContract) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *CreatePasswordAccountRequestContract) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *CreatePasswordAccountRequestContract) UnsetPassword() {
	o.Password.Unset()
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePasswordAccountRequestContract) GetUsername() string {
	if o == nil || IsNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePasswordAccountRequestContract) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *CreatePasswordAccountRequestContract) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *CreatePasswordAccountRequestContract) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *CreatePasswordAccountRequestContract) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *CreatePasswordAccountRequestContract) UnsetUsername() {
	o.Username.Unset()
}

func (o CreatePasswordAccountRequestContract) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePasswordAccountRequestContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	return toSerialize, nil
}

type NullableCreatePasswordAccountRequestContract struct {
	value *CreatePasswordAccountRequestContract
	isSet bool
}

func (v NullableCreatePasswordAccountRequestContract) Get() *CreatePasswordAccountRequestContract {
	return v.value
}

func (v *NullableCreatePasswordAccountRequestContract) Set(val *CreatePasswordAccountRequestContract) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePasswordAccountRequestContract) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePasswordAccountRequestContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePasswordAccountRequestContract(val *CreatePasswordAccountRequestContract) *NullableCreatePasswordAccountRequestContract {
	return &NullableCreatePasswordAccountRequestContract{value: val, isSet: true}
}

func (v NullableCreatePasswordAccountRequestContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePasswordAccountRequestContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


