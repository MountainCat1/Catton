/*
Conventions.Api

Testing AttendeeAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_AttendeeAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AttendeeAPIService ApiConventionsConventionIdAttendeesAccountIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var conventionId string
		var accountId string

		resp, httpRes, err := apiClient.AttendeeAPI.ApiConventionsConventionIdAttendeesAccountIdDelete(context.Background(), conventionId, accountId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttendeeAPIService ApiConventionsConventionIdAttendeesAccountIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var conventionId string
		var accountId string

		resp, httpRes, err := apiClient.AttendeeAPI.ApiConventionsConventionIdAttendeesAccountIdGet(context.Background(), conventionId, accountId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttendeeAPIService ApiConventionsConventionIdAttendeesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var conventionId string

		resp, httpRes, err := apiClient.AttendeeAPI.ApiConventionsConventionIdAttendeesGet(context.Background(), conventionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttendeeAPIService ApiConventionsConventionIdAttendeesMePost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var conventionId string

		resp, httpRes, err := apiClient.AttendeeAPI.ApiConventionsConventionIdAttendeesMePost(context.Background(), conventionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttendeeAPIService ApiConventionsConventionIdAttendeesPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var conventionId string

		resp, httpRes, err := apiClient.AttendeeAPI.ApiConventionsConventionIdAttendeesPost(context.Background(), conventionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
