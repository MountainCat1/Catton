/*
Conventions.Api

Testing OrganizerAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_OrganizerAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test OrganizerAPIService ApiConventionsConventionIdOrganizersGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var conventionId string

		resp, httpRes, err := apiClient.OrganizerAPI.ApiConventionsConventionIdOrganizersGet(context.Background(), conventionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrganizerAPIService ApiConventionsConventionIdOrganizersOrganizerIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var conventionId string
		var organizerId string

		resp, httpRes, err := apiClient.OrganizerAPI.ApiConventionsConventionIdOrganizersOrganizerIdDelete(context.Background(), conventionId, organizerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrganizerAPIService ApiConventionsConventionIdOrganizersOrganizerIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var conventionId string
		var organizerId string

		resp, httpRes, err := apiClient.OrganizerAPI.ApiConventionsConventionIdOrganizersOrganizerIdGet(context.Background(), conventionId, organizerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrganizerAPIService ApiConventionsConventionIdOrganizersOrganizerIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var conventionId string
		var organizerId string

		resp, httpRes, err := apiClient.OrganizerAPI.ApiConventionsConventionIdOrganizersOrganizerIdPut(context.Background(), conventionId, organizerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrganizerAPIService ApiConventionsConventionIdOrganizersPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var conventionId string

		resp, httpRes, err := apiClient.OrganizerAPI.ApiConventionsConventionIdOrganizersPost(context.Background(), conventionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
