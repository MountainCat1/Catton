/*
Conventions.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizerCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizerCreateDto{}

// OrganizerCreateDto struct for OrganizerCreateDto
type OrganizerCreateDto struct {
	AccountId *string `json:"accountId,omitempty"`
}

// NewOrganizerCreateDto instantiates a new OrganizerCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizerCreateDto() *OrganizerCreateDto {
	this := OrganizerCreateDto{}
	return &this
}

// NewOrganizerCreateDtoWithDefaults instantiates a new OrganizerCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizerCreateDtoWithDefaults() *OrganizerCreateDto {
	this := OrganizerCreateDto{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *OrganizerCreateDto) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizerCreateDto) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *OrganizerCreateDto) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *OrganizerCreateDto) SetAccountId(v string) {
	o.AccountId = &v
}

func (o OrganizerCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizerCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	return toSerialize, nil
}

type NullableOrganizerCreateDto struct {
	value *OrganizerCreateDto
	isSet bool
}

func (v NullableOrganizerCreateDto) Get() *OrganizerCreateDto {
	return v.value
}

func (v *NullableOrganizerCreateDto) Set(val *OrganizerCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizerCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizerCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizerCreateDto(val *OrganizerCreateDto) *NullableOrganizerCreateDto {
	return &NullableOrganizerCreateDto{value: val, isSet: true}
}

func (v NullableOrganizerCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizerCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


